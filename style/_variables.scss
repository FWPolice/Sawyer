/*
* Theme: Sawyer
* Author: FWPolice
* Author URL: http://fwpolice.com
*/

/** Mixins **/

// WebKit font-smoothing
// Values: none, antialiased (default), subpixel-antialiased
@mixin font-smoothing($value: on) {
    @if $value == on {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    }
}

// Flex-box upgrade
@mixin flexbox-row($value: on) {
    @if $value == on {
        display: flex;
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -webkit-flex-direction: row;
        -ms-flex-direction: row;
        flex-direction: row;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -webkit-box-align: stretch;
        -webkit-align-items: stretch;
        -ms-flex-align: stretch;
        align-items: stretch;
    }
    @else {
        display: block;
    }
}

@mixin flexbox-col($value: on) {
    @if $value == on {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-pack: center;
        -webkit-justify-content: center;
        -ms-flex-pack: center;
        justify-content: center;
    }
    @else {
        display: block;
    }
}

// Cross-browser mixins transition and shadow
@mixin bezier-transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin transform-opal($axex,$axey,$axez) {
    -webkit-transform: translate3d($axex,$axey,$axez);
    -moz-transform: translate3d($axex,$axey,$axez);
    -o-transform: translate3d($axex,$axey,$axez);
    -ms-transform: translate3d($axex,$axey,$axez);
    transform: translate3d($axex,$axey,$axez);
}

@mixin box-shadow($params) {
    -webkit-box-shadow: $params;
    -moz-box-shadow: $params;
    box-shadow: $params;
}

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

// Cross-browser mixins border-radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

// Cross-browser transform mixins
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

@mixin rotate($rotate) {
    -ms-transform: rotate($rotate);
    -webkit-transform: rotate($rotate);
    -moz-transform: rotate($rotate);
    transform: rotate($rotate);
}

@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}

// Image effect
@mixin linear-gradient($direction, $color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}

@mixin blur ($radius) {
	-webkit-filter: blur($radius+px); /* Chrome, Safari */
	-ms-filter: blur($radius+px); /* IE12? */
	filter: url("data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><filter id=\"blur\"><feGaussianBlur stdDeviation=\"#{$radius}\" /></filter></svg>#blur"); /* Firefox, Safari, Chrome*/
	filter: progid:DXImageTransform.Microsoft.Blur(Strength=$radius); /* IE9 */
}

@mixin filter($filter-type,$filter-amount) {
    -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
    -moz-filter: $filter-type+unquote('(#{$filter-amount})');
    -ms-filter: $filter-type+unquote('(#{$filter-amount})');
    -o-filter: $filter-type+unquote('(#{$filter-amount})');
    filter: $filter-type+unquote('(#{$filter-amount})');
}

// Hacks
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

%no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// Convert PX to Rem
@function calculateRem($size) {
    $remSize: $size / 16px;
    @return #{$remSize}rem;
}

@mixin fontSize($size) {
    font-size: $size; //Fallback in px
    font-size: calculateRem($size);
}

/** Definitions **/

// Fonts
$fontSize:        1.85rem;
$fontPrimary:     'Josefin Sans', 'Helvetica Neue', 'Lucida Grande', Arial, Verdana, sans-serif;
$fontHeader:      $fontPrimary;
$fontLight:       300;
$fontNormal:      400;
$fontBold:        600;
$fontStyle:       normal;
$letterSpacing:   0;
$lineHeight:      1.7;

// Sizes
$frameSize:       3.5rem;
$padding:         2rem;


// Colors
$primaryColor:    #f26b38;
$secondaryColor:  #1D91F2;
$textColor:       #5B5D5F;
$headerColor:     #2d2f31;
$white:           #fff;
$bodyColor:       #fff;
$frameColor:      #F1F2F1;
$menuColor:       #101011;
$borderColor:     #CCC;

// Forms Colors
$greenAlert:      #27AE60;
$redAlert:        #CF000F;

// Social Media Brand Colors
$twitter: #00aced;
$facebook: #3b5998;
$googleplus: #dd4b39;
$pinterest: #cb2027;
$linkedin: #007bb6;
$youtube: #bb0000;
$vimeo: #aad450;
$tumblr: #32506d;
$instagram: #517fa4;
$flickr: #ff0084;
$dribbble: #ea4c89;
$soundcloud: #ff3a00;
$behance: #1769ff;

// Animation Speed
$animateFast: 0.2s;
$animateNormal: 0.3s;
$animateSlow: 0.6s;
$t: 0.3s;
